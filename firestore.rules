rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Require authentication for all reads and writes
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Clients collection
    match /clients/{clientId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && 
        resource == null &&
        request.resource.data.keys().hasAll(['name', 'email', 'phone', 'createdAt', 'updatedAt']);
      allow update: if request.auth != null && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['name', 'email', 'phone', 'address', 'updatedAt', 'isActive', 'additionalInfo']);
    }
    
    // Investments collection
    match /investments/{investmentId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && 
        resource == null &&
        request.resource.data.keys().hasAll(['clientId', 'employeeId', 'productType', 'investmentAmount', 'createdAt', 'updatedAt']);
    }
    
    // Products collection
    match /products/{productId} {
      allow read, write: if request.auth != null;
      allow create: if request.auth != null && 
        resource == null &&
        request.resource.data.keys().hasAll(['name', 'type', 'companyId', 'createdAt', 'updatedAt']);
    }
    
    // Companies collection
    match /companies/{companyId} {
      allow read, write: if request.auth != null;
    }
    
    // Employees collection
    match /employees/{employeeId} {
      allow read, write: if request.auth != null;
    }
    
    // Analytics collection (read-only for most users)
    match /analytics/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // You might want to restrict this further
    }
  }
}
